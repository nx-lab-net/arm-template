{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "myVM",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the virtual machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the virtual machine."
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address space for the virtual network."
      }
    },
    "subnetPrefixLength": {
      "type": "int",
      "defaultValue": 24,
      "metadata": {
        "description": "Prefix length for the subnet."
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "myPublicIP",
      "metadata": {
        "description": "Name of the public IP address."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "myuniqueprefix",
      "metadata": {
        "description": "Unique DNS name label prefix for the public IP address."
      }
    },
    "acrName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Container Registry."
      }
    },
    "acrRepository": {
      "type": "string",
      "metadata": {
        "description": "Name of the ACR repository to pull the Docker image from."
      }
    },
    "acrImageTag": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Tag of the Docker image to pull from ACR."
      }
    },
    "acrUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Azure Container Registry."
      }
    },
    "acrPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Azure Container Registry."
      }
    }
  },
  "variables": {
    "subnetAddressPrefix": "[concat(split(parameters('vnetAddressSpace'), '/')[0], '/', parameters('subnetPrefixLength'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-01-01",
      "location": "[resourceGroup().location]",
      "name": "[parameters('publicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "location": "[resourceGroup().location]",
      "name": "myVnet",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-01-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('vmName'), 'Nic')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'myVnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'myVnet', 'default')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-03-01",
      "location": "[resourceGroup().location]",
      "name": "[parameters('vmName')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'myManagedIdentity')]": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), 'Nic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4s_v3"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(concat('#!/bin/bash\n', 'sudo apt-get update\n', 'sudo apt-get install -y docker.io\n', 'sudo usermod -aG docker $USER\n', 'acrName=', parameters('acrName'), '\n', 'acrUsername=', parameters('acrUsername'), '\n', 'acrPassword=', parameters('acrPassword'), '\n', 'acrRepository=', parameters('acrRepository'), '\n', 'acrImageTag=', parameters('acrImageTag'), '\n', 'echo $acrPassword | docker login $acrName.azurecr.io -u $acrUsername --password-stdin\n', 'docker pull $acrName.azurecr.io/$acrRepository:$acrImageTag\n', 'docker run -d $acrName.azurecr.io/$acrRepository:$acrImageTag\n'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), 'Nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "location": "[resourceGroup().location]",
      "name": "myManagedIdentity"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscription().id, 'roleAssignment1')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'myManagedIdentity'), '2023-01-31').principalId]",
        "scope": "[subscription().id]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscription().id, 'roleAssignment2')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f1a07417-d97a-45cb-824c-7a7467783830')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'myManagedIdentity'), '2023-01-31').principalId]",
        "scope": "[subscription().id]"
      }
    }
  ],
  "outputs": {
    "publicIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))).ipAddress]"
    }
  }
}

