{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VerifyAppFQDN": {
      "type": "string",
      "metadata": {
        "description": "FQDN to access the application through the web browser"
      }
    },
    "AddressSpace": {
      "type": "string",
      "metadata": {
        "description": "IP CIDR for Verify application deployment, ex. 10.120.0.0/16"
      }
    },
    "ServicePrincipalUser": {
      "type": "string",
      "metadata": {
        "description": "Service Principal User"
      }
    },
    "ServicePrincipalSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Service Principal Secret"
      }
    },
    "ServicePrincipalTenant": {
      "type": "string",
      "metadata": {
        "description": "Service Principal Tenant"
      }
    },
    "ModelsStorageURL": {
      "type": "securestring",
      "metadata": {
        "description": "Models will be transfered using this auth method"
      }
    },
    "ArtifactoryUsername": {
      "type": "string",
      "metadata": {
        "description": "Username to access the Container Registry"
      }
    },
    "ArtifactoryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to access the Container Registry"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "verify-deploy-VNET",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "172.17.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "172.17.1.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "verify-deploy-PIP",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "verify-deploy-NIC",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'verify-deploy-VNET')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'verify-deploy-PIP')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'verify-deploy-VNET', 'default')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'verify-deploy-PIP')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "verify-deploy-VM",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'verify-deploy-NIC')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4s_v3"
        },
        "osProfile": {
          "computerName": "verify-deploy-VM",
          "adminUsername": "verify",
          "adminPassword": "Verify416",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
         "customData": "[base64(concat('#!/bin/bash\n', 'sudo apt-get update\n', 'sudo apt install docker.io -y\n', 'sudo docker login -u ', parameters('ArtifactoryUsername'), ' -p ', parameters('ArtifactoryPassword'), ' zerosystemseng.azurecr.io && sudo docker run -d -v /var/log/cloud-init-output.log:/cloud-init-output.log -p 80:80 zerosystemseng.azurecr.io/zerosystems/verify/logger:latest && sudo docker run  -e TF_VAR_acr_username=', parameters('ArtifactoryUsername'), ' -e TF_VAR_acr_password=', parameters('ArtifactoryPassword'), ' -e TF_VAR_existing_vm_rg=', resourceGroup().name, ' -e TF_VAR_existing_vm_vnet=verify-deploy-VNET', ' -e TF_VAR_vnet_address_space=', parameters('AddressSpace'), ' -e ServicePrincipalUser=', parameters('ServicePrincipalUser'), ' -e ServicePrincipalSecret=', parameters('ServicePrincipalSecret'), ' -e ServicePrincipalTenant=', parameters('ServicePrincipalTenant'), ' -e TF_VAR_ModelsStorageURL=', parameters('ModelsStorageURL'), ' zerosystemseng.azurecr.io/zerosystems/verify/deployer:latest'))]"

        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'verify-deploy-NIC')]"
            }
          ]
        }
      }
    }
  ]
}


